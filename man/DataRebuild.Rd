% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ipd_rec.R
\name{DataRebuild}
\alias{DataRebuild}
\title{IPD reconstruction from IPD summaries only.}
\usage{
DataRebuild(H, n, correlation.matrix, moments, x.mode,
  johnson.parameters = NULL, stochastic.integration = FALSE,
  data.rearrange = c("incomplete", "norta"), corrtype = c("rank.corr",
  "moment.corr", "normal.corr"), marg.model = c("gamma", "johnson"),
  variable.names = NULL, SBjohn.correction = F, compute.eec = F,
  checkdata = F, tabulate.similar.data = FALSE,
  multicore.options = list(chunkSize = ceiling(H/(ncores - 1))))
}
\arguments{
\item{H}{integer number of independent IPD replicates to be generated.}

\item{n}{integer number of independent IPD records. Ex: number of rows (subjects) in original IPD.}

\item{correlation.matrix}{pairwise IPD correlations values.}

\item{moments}{numeric array of IPD marginal moments up to fourth degree for all IPD variables (columns).}

\item{x.mode}{logical vector: is IPD marginal variable binary (TRUE) or not ?}

\item{johnson.parameters}{array of Johnson parameters for each IPD marginal variable. Depends on CRAN archived 'JohnsonDistribution' package. If NULL it is computed on given 'moments'.}

\item{stochastic.integration}{logical: should Monte Carlo integration be used to resolve Gaussian copula inversion (NORTA transformation)? Default to FALSE, that is numerical integration relying on package 'cubature' is used first.}

\item{data.rearrange}{method of IPD dependence reconstruction based on all pairwise IPD correlations (norta), or on first degree correlations only (incomplete).}

\item{corrtype}{what type of IPD correlation matrix are you feeding in ? Spearman (rank.corr), Pearson (moment.corr), or Waerden (normal.corr).}

\item{marg.model}{either gamma or johnson for modeling of non-binary IPD marginal. All binary marginals are modeled via a Bernoulli distribution.}

\item{variable.names}{names of IPD marginal variables. If NULL (Default) automatic labels are generated.}

\item{SBjohn.correction}{logical. Should be Johnson marginal values corrected ? Default to FALSE. See Details.}

\item{compute.eec}{currently deprecated. Do not edit default value.}

\item{checkdata}{logical: if TRUE it compares the IPD summary (marginal moments and pairwise correlations) averages over the H IPD reconstructions against the original IPD summary input values.}

\item{tabulate.similar.data}{if TRUE and also checkdata = TRUE it returns the full tabular comparison between the reconstructed and original IPD summaries.}

\item{multicore.options}{number of cores to be used for parallel
  computations. Default to 'ncores'. Ex: in your working space
  pre-define ncore <- 3.}

\item{SI_k}{resampling size of stochastic integration approach.}
}
\value{
An object of class 'similar.data'.
}
\description{
`DataRebuild()` generates stochastic copies of the original IPD by taking empirical IPD distributional summaries as input data only.
}
\details{
`DataRebuild()` is based on a Gaussian Copula inversion technique also known as NORmal To Anything (NORTA) transformation. If data.rearrange = "norta" is chosen it would mostly make sense to use corrtype = "moment.corr". This program relies on archived package 'JohnsonDistribution', that is one of the few (if not the only) available R code that obtain rather stable solutions for the Johnson system based on the Hill algorithm. Some minimal issues though exist: the SB type distribution (positive reals support) can wrongly sample some negative values. This can be problematic if the marginal is later constrained to be positive (log transformation ?). Then SBjohn.correction = TRUE sets negative values equal to the minimum positive value generated (see function 'rJohn' in source code). This could slightly alter moment features. Hence if no later constraints on the marginal are needed it is better to avoid any correction.
}
\section{Note}{
 this program currently assumes the input IPD summaries arise from a specific IPD format where a categorical variable with \eqn{m} levels is converted to \eqn{m-1} dummy (binary) variables previous to IPD summary computation. This underlies the simplification made in modelling of the IPD marginals, where the program currently only distinguished between a binary and a non binary type. The latter is approximated by a continuous distribution (either Gamma or Johnson) depending on the amount of marginal moment (respectively either up to second or fourth degree). This particular approach does not need to be restrictive. For instance, in future versions one can adapt the code to allow for categorical marginals as well. For such marginals the preferred modeling choice would intuitively be the Multinomial distribution.
}

\examples{
\dontrun{
DataRebuild( H = 100, n = 1000 )
}
}
\references{

}
\seealso{
[Return.key.IPD.summaries()] for allowed input IPD summary format, [FitJohnsonDistribution()] from archived package JohnsonDistribution, [adaptIntegrate()] from package cubature
}
