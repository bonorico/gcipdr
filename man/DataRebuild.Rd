% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ipd_rec.R
\name{DataRebuild}
\alias{DataRebuild}
\title{IPD reconstruction from IPD summaries only.}
\usage{
DataRebuild(H, n, correlation.matrix, moments, x.mode,
  johnson.parameters = NULL, stochastic.integration = FALSE,
  data.rearrange = c("incomplete", "norta"), corrtype = c("rank.corr",
  "moment.corr", "normal.corr"), marg.model = c("gamma", "johnson"),
  variable.names = NULL, SBjohn.correction = F, compute.eec = F,
  checkdata = F, tabulate.similar.data = FALSE,
  SI_k = 8000, input.sn.corr = NULL)
}
\arguments{
\item{H}{integer number of independent IPD replicates to be generated.}

\item{n}{integer number of independent IPD records. Ex: number of rows (subjects) in original IPD.}

\item{correlation.matrix}{pairwise IPD correlations values.}

\item{moments}{numeric array of IPD marginal moments up to fourth degree for all IPD variables (columns).}

\item{x.mode}{logical vector: is IPD marginal variable binary (TRUE) or not ?}

\item{johnson.parameters}{array of Johnson parameters for each IPD marginal variable. Depends on CRAN archived 'JohnsonDistribution' package. If NULL it is computed on given 'moments'.}

\item{stochastic.integration}{logical: should Monte Carlo integration be used to resolve Gaussian copula inversion (NORTA transformation)? Default to FALSE, that is numerical integration relying on package 'cubature' is used first.}

\item{data.rearrange}{method of IPD dependence reconstruction based on all pairwise IPD correlations (norta), or on first degree correlations only (incomplete).}

\item{corrtype}{what type of IPD correlation matrix are you feeding in ? Spearman (rank.corr), Pearson (moment.corr), or Waerden (normal.corr).}

\item{marg.model}{either gamma or johnson for modeling of non-binary IPD marginal. All binary marginals are modeled via a Bernoulli distribution.}

\item{variable.names}{names of IPD marginal variables. If NULL (Default) automatic labels are generated.}

\item{SBjohn.correction}{logical. Should be Johnson marginal values
  corrected ? Default to FALSE. If TRUE, wrongly sampled negative values
 are set to the minimum positive sampled value. }

\item{compute.eec}{currently deprecated. Do not edit default value.}

\item{checkdata}{logical: if TRUE it compares the IPD summary (marginal moments and pairwise correlations) averages over the H IPD reconstructions against the original IPD summary input values.}

\item{tabulate.similar.data}{if TRUE and also checkdata = TRUE it returns the full tabular comparison between the reconstructed and original IPD summaries.}

\item{SI_k}{resampling size of stochastic integration approach. Default
  to 8000.}

\item{NI_tol}{error tolerance for numerical integration. Default 1e-02,
  do not decrease too much. As reasonable max value use 1e-05.}

\item{NI_maxEval}{max number of evaluations during numerical
  integration. Default 500 (instead 0 implies infinite number of evaluations)..}

\item{input.sn.corr}{solution of 'correlation.matrix' into standard normal space (the Gaussian copula parameter, see Details). Default is NULL and solution is found internally via optimization. If matrix solution is instead given, it overrides internal optimization and it is directly used to generate artificial data. This can be useful as a post hoc data generation tuning. See Details.}
}
\value{
An object of class 'similar.data'.
}
\description{
`DataRebuild()` generates stochastic copies of the original IPD by taking empirical IPD distributional summaries as input data only.
}
\details{
`DataRebuild()` is based on a Gaussian Copula inversion technique also known as NORmal To Anything (NORTA) transformation. If data.rearrange = "norta" is chosen it would mostly make sense to use corrtype = "moment.corr". If inversion fails with numerical integration (default), try stochastic integration (stochastic.integration = TRUE) instead. Argument SI_k tunes sample size of stoch. integration. Via argument 'input.sn.corr' we can force usage of a custom copula correlation matrix solution, obtained for instance after post hoc external fine tuning of single matrix entries of a previously ouput matrix solution.
}
\section{Note}{
 this program currently assumes that previous to calculation of the
 input IPD summaries every IPD categorical variable with \eqn{m} levels
 was first
 converted to \eqn{m-1} dummy (binary) variables. As an alternative one
 can, in the future, allow for
 categorical marginals as well and use a Multinomial distribution
 modeling. This program relies on archived package 'JohnsonDistribution'.
}

\examples{
\dontrun{
DataRebuild( H = 100, n = 1000 )
}
}
\references{

}
\seealso{
[Return.key.IPD.summaries()] for allowed input IPD summary format, [FitJohnsonDistribution()] from archived package JohnsonDistribution, [adaptIntegrate()] from package cubature
}
 
